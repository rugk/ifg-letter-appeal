# This is a basic workflow to help you get started with Actions

name: OnCommit

# Controls when the action will run. 
on:
  push:
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # create screenshots
  screenshots:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [build]
      
    env:
      SCREENSHOT_DIR: "./screenshots"
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      # get compiled PDF
      - uses: actions/download-artifact@v2
        with:
          name: PDF
        
      # convert PDF to screenshot 
      # https://askubuntu.com/a/50180/606016
      - name: Generate screenshots
        run: |
          sudo apt-get -y install poppler-utils
          mkdir -p "$SCREENSHOT_DIR"
          pdftoppm *.pdf "$SCREENSHOT_DIR/template-page" -png
        
      - name: Add & Commit
        # You may pin to the exact commit or the version.
        # uses: EndBug/add-and-commit@b3c7c1e078a023d75fb0bd326e02962575ce0519
        uses: EndBug/add-and-commit@v7
        with:
          # Arguments for the git add command
          add: "${{ env.SCREENSHOT_DIR }}/" # optional, default is .
          # The name of the user that will be displayed as the author of the commit
          author_name: github-actions # optional, default is ${{ github.actor }}
          # The email of the user that will be displayed as the author of the commit
          author_email: github-actions@github.com # optional, default is ${{ github.actor }}@users.noreply.github.com
          # Name of the branch to use, if different from the one that triggered the workflow
          #branch: # optional
          # The directory where your repository is located. You should use actions/checkout first to set it up
          #cwd: # optional, default is .
          # The message for the commit
          message: "chore: update example screenshots" # optional
          # The flag used on the pull strategy
          #pull_strategy: # optional, default is --no-rebase
          # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (more info in the README)
          #push: # optional, default is true
          # Arguments for the git rm command
          #remove: # optional
          # Whether to use the --signoff option on git commit
          #signoff: # optional
          # Arguments for the git tag command (the tag name always needs to be the first word not preceded by a hyphen)
          #tag: # optional
